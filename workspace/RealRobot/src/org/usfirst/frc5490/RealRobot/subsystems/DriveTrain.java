// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5490.RealRobot.subsystems;

import org.usfirst.frc5490.RealRobot.RobotMap;
import org.usfirst.frc5490.RealRobot.commands.*;
import edu.wpi.first.wpilibj.*;

import edu.wpi.first.wpilibj.command.Subsystem;

import org.usfirst.frc5490.RealRobot.OI;


/**
 *
 */
public class DriveTrain extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    SpeedController leftFront = RobotMap.driveTrainLeftFront;
    SpeedController leftRear = RobotMap.driveTrainLeftRear;
    SpeedController rightFront = RobotMap.driveTrainRightFront;
    SpeedController rightRear = RobotMap.driveTrainRightRear;
    RobotDrive robotDrive41 = RobotMap.driveTrainRobotDrive41;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

public void drive()  {

    OI joystickPosition = new OI();
    double ySpeed = joystickPosition.getYValue();

    private double driveSpeed;
    this.driveSpeed = (((ySpeed+1)/2)^3)-0.125;

    public double getDriveSpeed()   {
        return this.driveSpeed;
    }

    if (driveSpeed > 0.8)   {
        driveSpeed = 0.8;
    }

    OI joystickPosition = new OI();
    double xSteer = joystickPosition.getXValue();

    double leftSpeed = driveSpeed;
    double rightSpeed = driveSpeed;

    if (xSteer > 1) {
        this.leftSpeed = leftSpeed + xSteer/6
        this.rightSpeed = rightSpeed - xSteer/6
    }
    if (xSteer < 1) {
        this.leftSpeed = leftSpeed - xSteer/6
        this.rightSpeed = rightSpeed + xSteer/6
    }

    if (xSteer > 1 and driveSpeed = 0)  {
        this.leftSpeed = 0.5;
        this.rightSpeed = -0.5;
    }
    if (xSteer < 1 and driveSpeed = 0)  {
        this.leftSpeed = -0.5;
        this.rightSpeed = 0.5;
    }

    public double leftMotor()   {
        return this.leftSpeed;
    }
    public double rightMotor()  {
        return this.rightSpeed;
    }


}

    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	   setDefaultCommand(new Move());
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
}

